{"version":3,"sources":["webpack:///./node_modules/_core-js@2.6.1@core-js/modules/es7.array.includes.js","webpack:///./node_modules/_core-js@2.6.1@core-js/modules/_string-context.js","webpack:///./node_modules/_core-js@2.6.1@core-js/modules/_fails-is-regexp.js","webpack:///./node_modules/_core-js@2.6.1@core-js/modules/es6.string.includes.js","webpack:///./node_modules/_vue-cropperjs@3.0.0@vue-cropperjs/dist/VueCropper.js","webpack:///./src/pages/upload/elupload.vue?7af7","webpack:///./src/pages/upload/elupload.vue?7756","webpack:///src/pages/upload/elupload.vue","webpack:///./src/pages/upload/elupload.vue?c5cb","webpack:///./src/pages/upload/elupload.vue","webpack:///./node_modules/_cropperjs@1.4.3@cropperjs/dist/cropper.esm.js"],"names":["$export","__webpack_require__","$includes","P","includes","el","this","arguments","length","undefined","isRegExp","defined","module","exports","that","searchString","NAME","TypeError","String","MATCH","KEY","re","e","f","context","INCLUDES","F","indexOf","Object","defineProperty","value","_cropperjs","_cropperjs2","_interopRequireDefault","obj","__esModule","default","_objectWithoutProperties","keys","target","i","prototype","hasOwnProperty","call","render","h","style","containerStyle","ref","attrs","src","alt","imgStyle","props","type","viewMode","Number","dragMode","aspectRatio","data","preview","Array","Element","NodeList","responsive","Boolean","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","Function","cropstart","cropmove","cropend","crop","zoom","mounted","_$options$props","$options","key","cropper","$refs","img","methods","reset","clear","initCrop","replace","url","onlyColorChanged","enable","disable","destroy","move","offsetX","offsetY","moveTo","x","y","relativeZoom","ratio","_originalEvent","zoomTo","rotate","degree","rotateTo","scaleX","_scaleX","scaleY","_scaleY","scale","getData","rounded","setData","getContainerData","getImageData","getCanvasData","setCanvasData","getCropBoxData","setCropBoxData","getCroppedCanvas","options","setAspectRatio","setDragMode","mode","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_5_1_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_5_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_5_1_vue_loader_lib_index_js_vue_loader_options_elupload_vue_vue_type_style_index_0_id_217e7790_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_0_5_0_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_15_5_1_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_1_2_5_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_5_1_vue_loader_lib_index_js_vue_loader_options_elupload_vue_vue_type_style_index_0_id_217e7790_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","_vm","_h","$createElement","_c","_self","text","icon","staticClass","action","on-preview","handlePreview","on-success","handleAvatarSuccess","before-upload","beforeAvatarUpload","on-remove","handleRemove","file-list","fileList2","list-type","size","_v","slot","cropImg","name","accept","on","change","setImage","title","visible","dialogVisible","width","update:visible","$event","staticStyle","height","imgSrc","cropImage","click","cancelCrop","staticRenderFns","eluploadvue_type_script_lang_js_","components","VueCropper","VueCropper_default","a","created","defaultSrc","imageUrl","fileList","file","console","log","res","URL","createObjectURL","raw","isJPG","isPNG","isLt2M","$alert","confirmButtonText","callback","_this","files","reader","FileReader","onload","event","result","readAsDataURL","toDataURL","imageuploaded","handleError","$notify","error","message","upload_eluploadvue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","_typeof","Symbol","iterator","constructor","_classCallCheck","instance","Constructor","_defineProperties","descriptor","enumerable","configurable","writable","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","isArray","arr2","iter","toString","from","r","IN_BROWSER","window","WINDOW","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","initialAspectRatio","NaN","TEMPLATE","isNaN","isNumber","isUndefined","isObject","isPlainObject","_constructor","isFunction","forEach","assign","_len","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","property","hasClass","classList","contains","className","addClass","elem","add","trim","removeClass","remove","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","dataset","getAttribute","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","get","set","addEventListener","removeEventListener","removeListener","handler","split","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","sort","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","isFinite","getAdjustedSizes","_ref4","isValidNumber","adjustedWidth","getRotatedSizes","_ref5","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","Infinity","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","drawImage","map","param","floor","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","orientation","DataView","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_offset","_length","setUint16","parseOrientation","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","dragBox","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","changedTouches","touch","identifier","originalEvent","cropping","right","bottom","renderable","shiftKey","range","check","side","p","hasSameSize","isImg","replaced","uncreate","load","originalUrl","_this$canvasData","pivot","oldRatio","sized","widthChanged","heightChanged","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","sourceWidth","sourceHeight","srcX","srcY","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","read","clone","xhr","XMLHttpRequest","ontimeout","onabort","onerror","onprogress","getResponseHeader","abort","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild"],"mappings":"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","file":"js/chunk-dc576854.6ee9ca9f.js","sourcesContent":["'use strict';\n// https://github.com/tc39/Array.prototype.includes\nvar $export = require('./_export');\nvar $includes = require('./_array-includes')(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nrequire('./_add-to-unscopables')('includes');\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n'use strict';\nvar $export = require('./_export');\nvar context = require('./_string-context');\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _cropperjs = require('cropperjs');\n\nvar _cropperjs2 = _interopRequireDefault(_cropperjs);\n\nrequire('cropperjs/dist/cropper.css');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nexports.default = {\n  render: function render(h) {\n    return h('div', { style: this.containerStyle }, [h('img', {\n      ref: 'img',\n      attrs: {\n        src: this.src,\n        alt: this.alt || 'image',\n        style: 'max-width: 100%'\n      },\n      style: this.imgStyle\n    })]);\n  },\n\n  props: {\n    containerStyle: Object,\n    src: {\n      type: String,\n      default: ''\n    },\n    alt: String,\n    imgStyle: Object,\n\n    viewMode: Number,\n    dragMode: String,\n    aspectRatio: Number,\n    data: Object,\n    preview: [String, Array, Element, NodeList],\n    responsive: {\n      type: Boolean,\n      default: true\n    },\n    restore: {\n      type: Boolean,\n      default: true\n    },\n    checkCrossOrigin: {\n      type: Boolean,\n      default: true\n    },\n    checkOrientation: {\n      type: Boolean,\n      default: true\n    },\n    modal: {\n      type: Boolean,\n      default: true\n    },\n    guides: {\n      type: Boolean,\n      default: true\n    },\n    center: {\n      type: Boolean,\n      default: true\n    },\n    highlight: {\n      type: Boolean,\n      default: true\n    },\n    background: {\n      type: Boolean,\n      default: true\n    },\n    autoCrop: {\n      type: Boolean,\n      default: true\n    },\n    autoCropArea: Number,\n    movable: {\n      type: Boolean,\n      default: true\n    },\n    rotatable: {\n      type: Boolean,\n      default: true\n    },\n    scalable: {\n      type: Boolean,\n      default: true\n    },\n    zoomable: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnTouch: {\n      type: Boolean,\n      default: true\n    },\n    zoomOnWheel: {\n      type: Boolean,\n      default: true\n    },\n    wheelZoomRatio: Number,\n    cropBoxMovable: {\n      type: Boolean,\n      default: true\n    },\n    cropBoxResizable: {\n      type: Boolean,\n      default: true\n    },\n    toggleDragModeOnDblclick: {\n      type: Boolean,\n      default: true\n    },\n\n    minCanvasWidth: Number,\n    minCanvasHeight: Number,\n    minCropBoxWidth: Number,\n    minCropBoxHeight: Number,\n    minContainerWidth: Number,\n    minContainerHeight: Number,\n\n    ready: Function,\n    cropstart: Function,\n    cropmove: Function,\n    cropend: Function,\n    crop: Function,\n    zoom: Function\n  },\n  mounted: function mounted() {\n    var _$options$props = this.$options.props,\n        containerStyle = _$options$props.containerStyle,\n        src = _$options$props.src,\n        alt = _$options$props.alt,\n        imgStyle = _$options$props.imgStyle,\n        data = _objectWithoutProperties(_$options$props, ['containerStyle', 'src', 'alt', 'imgStyle']);\n\n    var props = {};\n\n    for (var key in data) {\n      if (this[key] !== undefined) {\n        props[key] = this[key];\n      }\n    }\n\n    this.cropper = new _cropperjs2.default(this.$refs.img, props);\n  },\n\n  methods: {\n    reset: function reset() {\n      return this.cropper.reset();\n    },\n    clear: function clear() {\n      return this.cropper.clear();\n    },\n    initCrop: function initCrop() {\n      return this.cropper.crop();\n    },\n    replace: function replace(url) {\n      var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      return this.cropper.replace(url, onlyColorChanged);\n    },\n    enable: function enable() {\n      return this.cropper.enable();\n    },\n    disable: function disable() {\n      return this.cropper.disable();\n    },\n    destroy: function destroy() {\n      return this.cropper.destroy();\n    },\n    move: function move(offsetX, offsetY) {\n      return this.cropper.move(offsetX, offsetY);\n    },\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n\n      return this.cropper.moveTo(x, y);\n    },\n    relativeZoom: function relativeZoom(ratio, _originalEvent) {\n      return this.cropper.zoom(ratio, _originalEvent);\n    },\n    zoomTo: function zoomTo(ratio, _originalEvent) {\n      return this.cropper.zoomTo(ratio, _originalEvent);\n    },\n    rotate: function rotate(degree) {\n      return this.cropper.rotate(degree);\n    },\n    rotateTo: function rotateTo(degree) {\n      return this.cropper.rotateTo(degree);\n    },\n    scaleX: function scaleX(_scaleX) {\n      return this.cropper.scaleX(_scaleX);\n    },\n    scaleY: function scaleY(_scaleY) {\n      return this.cropper.scaleY(_scaleY);\n    },\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n\n      return this.cropper.scale(scaleX, scaleY);\n    },\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      return this.cropper.getData(rounded);\n    },\n    setData: function setData(data) {\n      return this.cropper.setData(data);\n    },\n    getContainerData: function getContainerData() {\n      return this.cropper.getContainerData();\n    },\n    getImageData: function getImageData() {\n      return this.cropper.getImageData();\n    },\n    getCanvasData: function getCanvasData() {\n      return this.cropper.getCanvasData();\n    },\n    setCanvasData: function setCanvasData(data) {\n      return this.cropper.setCanvasData(data);\n    },\n    getCropBoxData: function getCropBoxData() {\n      return this.cropper.getCropBoxData();\n    },\n    setCropBoxData: function setCropBoxData(data) {\n      return this.cropper.setCropBoxData(data);\n    },\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return this.cropper.getCroppedCanvas(options);\n    },\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      return this.cropper.setAspectRatio(aspectRatio);\n    },\n    setDragMode: function setDragMode(mode) {\n      return this.cropper.setDragMode(mode);\n    }\n  }\n};","import mod from \"-!../../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/_vue-loader@15.5.1@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.5.1@vue-loader/lib/index.js??vue-loader-options!./elupload.vue?vue&type=style&index=0&id=217e7790&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/_mini-css-extract-plugin@0.5.0@mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/_vue-loader@15.5.1@vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.5.1@vue-loader/lib/index.js??vue-loader-options!./elupload.vue?vue&type=style&index=0&id=217e7790&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',[_c('hlvy-title',{attrs:{\"text\":'文件上传',\"icon\":'iconfont hlvy-icon-xueyuanguanliicon-'}})],1),_c('br'),_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"action\":\"https://jsonplaceholder.typicode.com/posts/\",\"on-preview\":_vm.handlePreview,\"on-success\":_vm.handleAvatarSuccess,\"before-upload\":_vm.beforeAvatarUpload,\"on-remove\":_vm.handleRemove,\"file-list\":_vm.fileList2,\"list-type\":\"picture\"}},[_c('el-button',{attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"点击上传\")]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"只能上传jpg/png文件，且不超过2M\")])],1),_c('div',[_c('br'),_c('div',[_c('hlvy-title',{attrs:{\"text\":'图片上传支持裁剪',\"icon\":'iconfont hlvy-icon-xueyuanguanliicon-'}})],1),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"content-title\"},[_vm._v(\"支持裁剪\")]),_c('div',{staticClass:\"crop-demo\"},[_c('img',{staticClass:\"pre-img\",attrs:{\"src\":_vm.cropImg}}),_c('div',{staticClass:\"crop-demo-btn\"},[_vm._v(\"选择图片\\n                      \"),_c('input',{staticClass:\"crop-input\",attrs:{\"type\":\"file\",\"name\":\"image\",\"accept\":\"image/*\"},on:{\"change\":_vm.setImage}})])]),_c('el-dialog',{attrs:{\"title\":\"裁剪图片\",\"visible\":_vm.dialogVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('vue-cropper',{ref:\"cropper\",staticStyle:{\"width\":\"100%\",\"height\":\"300px\"},attrs:{\"src\":_vm.imgSrc,\"ready\":_vm.cropImage,\"zoom\":_vm.cropImage,\"cropmove\":_vm.cropImage}}),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":_vm.cancelCrop}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"确 定\")])],1)],1)],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <div>\r\n            <hlvy-title :text=\"'文件上传'\" :icon=\"'iconfont hlvy-icon-xueyuanguanliicon-'\"></hlvy-title>\r\n        </div>\r\n        <br/>\r\n\r\n        <el-upload\r\n                class=\"upload-demo\"\r\n                action=\"https://jsonplaceholder.typicode.com/posts/\"\r\n                :on-preview=\"handlePreview\"\r\n                :on-success=\"handleAvatarSuccess\"\r\n                :before-upload=\"beforeAvatarUpload\"\r\n                :on-remove=\"handleRemove\"\r\n                :file-list=\"fileList2\"\r\n                list-type=\"picture\">\r\n            <el-button size=\"small\" type=\"primary\">点击上传</el-button>\r\n            <div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过2M</div>\r\n        </el-upload>\r\n\r\n\r\n      <div>\r\n<br/>\r\n          <div>\r\n              <hlvy-title :text=\"'图片上传支持裁剪'\" :icon=\"'iconfont hlvy-icon-xueyuanguanliicon-'\"></hlvy-title>\r\n          </div>\r\n          <div class=\"container\">\r\n\r\n              <div class=\"content-title\">支持裁剪</div>\r\n\r\n              <div class=\"crop-demo\">\r\n                  <img :src=\"cropImg\" class=\"pre-img\">\r\n                  <div class=\"crop-demo-btn\">选择图片\r\n                      <input class=\"crop-input\" type=\"file\" name=\"image\" accept=\"image/*\" @change =\"setImage\"/>\r\n                  </div>\r\n              </div>\r\n\r\n              <el-dialog title=\"裁剪图片\" :visible.sync=\"dialogVisible\" width=\"30%\">\r\n                  <vue-cropper ref='cropper' :src=\"imgSrc\" :ready=\"cropImage\" :zoom=\"cropImage\" :cropmove=\"cropImage\" style=\"width:100%;height:300px;\"></vue-cropper>\r\n                  <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"cancelCrop\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\r\n                </span>\r\n              </el-dialog>\r\n          </div>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import VueCropper  from 'vue-cropperjs';\r\n    export default {\r\n        name: \"elupload\",\r\n        components: {\r\n            VueCropper\r\n        },\r\n        created(){\r\n            this.cropImg = this.defaultSrc;\r\n        },\r\n        data() {\r\n            return {\r\n                fileList2: [{name: 'food.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}, {name: 'food2.jpeg', url: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'}],\r\n                imageUrl:'',\r\n                defaultSrc: 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg',\r\n                fileList: [],\r\n                imgSrc: '',\r\n                cropImg: '',\r\n                dialogVisible: false,\r\n            };\r\n        },\r\n        methods: {\r\n            handleRemove(file, fileList) {\r\n                console.log(file, fileList);\r\n            },\r\n            handlePreview(file) {\r\n                console.log(file);\r\n            },\r\n            handleAvatarSuccess(res, file) {\r\n                this.imageUrl = URL.createObjectURL(file.raw);\r\n            },\r\n            beforeAvatarUpload(file) {\r\n                const isJPG = file.type === 'image/jpeg';\r\n                const isPNG = file.type === 'image/png';\r\n                const isLt2M = file.size / 1024 / 1024 < 2;\r\n\r\n                if (!isJPG && !isPNG) {\r\n                    this.$alert('上传头像图片只能是 JPG/PNG 格式!!', '提示', {\r\n                        confirmButtonText: '确定',\r\n                        callback: action => {\r\n\r\n                        }\r\n                    });\r\n                    return false;\r\n                }\r\n                if (!isLt2M) {\r\n                    this.$alert('上传图片大小不能超过 2MB!!', '提示', {\r\n                        confirmButtonText: '确定',\r\n                        callback: action => {}\r\n                    });\r\n                    return false;\r\n                }\r\n                return isJPG||isPNG && isLt2M;\r\n            },\r\n\r\n            setImage(e){\r\n                const file = e.target.files[0];\r\n                if (!file.type.includes('image/')) {\r\n                    return;\r\n                }\r\n                const reader = new FileReader();\r\n                reader.onload = (event) => {\r\n                    this.dialogVisible = true;\r\n                    this.imgSrc = event.target.result;\r\n                    this.$refs.cropper && this.$refs.cropper.replace(event.target.result);\r\n                };\r\n                reader.readAsDataURL(file);\r\n            },\r\n            cropImage () {\r\n                this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\r\n            },\r\n            cancelCrop(){\r\n                this.dialogVisible = false;\r\n                this.cropImg = this.defaultSrc;\r\n            },\r\n            imageuploaded(res) {\r\n                console.log(res)\r\n            },\r\n            handleError(){\r\n                this.$notify.error({\r\n                    title: '上传失败',\r\n                    message: '图片上传接口上传失败，可更改为自己的服务器接口'\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    .content-title{\r\n        font-weight: 400;\r\n        line-height: 50px;\r\n        margin: 10px 0;\r\n        font-size: 22px;\r\n        color: #1f2f3d;\r\n    }\r\n    .pre-img{\r\n        width: 100px;\r\n        height: 100px;\r\n        background: #f8f8f8;\r\n        border: 1px solid #eee;\r\n        border-radius: 5px;\r\n    }\r\n    .crop-demo{\r\n        display: flex;\r\n        align-items: flex-end;\r\n    }\r\n    .crop-demo-btn{\r\n        position: relative;\r\n        width: 100px;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        padding: 0 20px;\r\n        margin-left: 30px;\r\n        background-color: #409eff;\r\n        color: #fff;\r\n        font-size: 14px;\r\n        border-radius: 4px;\r\n        box-sizing: border-box;\r\n    }\r\n    .crop-input{\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 40px;\r\n        left: 0;\r\n        top: 0;\r\n        opacity: 0;\r\n        cursor: pointer;\r\n    }\r\n</style>","import mod from \"-!../../../node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../../node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.5.1@vue-loader/lib/index.js??vue-loader-options!./elupload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/_thread-loader@1.2.0@thread-loader/dist/cjs.js!../../../node_modules/_babel-loader@8.0.5@babel-loader/lib/index.js!../../../node_modules/_cache-loader@1.2.5@cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/_vue-loader@15.5.1@vue-loader/lib/index.js??vue-loader-options!./elupload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./elupload.vue?vue&type=template&id=217e7790&scoped=true&\"\nimport script from \"./elupload.vue?vue&type=script&lang=js&\"\nexport * from \"./elupload.vue?vue&type=script&lang=js&\"\nimport style0 from \"./elupload.vue?vue&type=style&index=0&id=217e7790&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/_vue-loader@15.5.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"217e7790\",\n  null\n  \n)\n\ncomponent.options.__file = \"elupload.vue\"\nexport default component.exports","/*!\n * Cropper.js v1.4.3\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-10-24T13:07:15.032Z\n */\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar IN_BROWSER = typeof window !== 'undefined';\nvar WINDOW = IN_BROWSER ? window : {};\nvar NAMESPACE = 'cropper'; // Actions\n\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw'; // Classes\n\nvar CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\nvar CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\nvar CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\nvar CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\nvar CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\nvar CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\nvar CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\nvar DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\nvar DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none'; // Events\n\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom'; // Mime types\n\nvar MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\nvar REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0,\n  // 0, 1, 2, 3\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP,\n  // 'crop', 'move' or 'none'\n  // Define the initial aspect ratio of the crop box\n  initialAspectRatio: NaN,\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n  // An object with the previous cropping result data\n  data: null,\n  // A selector for adding extra containers to preview\n  preview: '',\n  // Re-render the cropper when resize the window\n  responsive: true,\n  // Restore the cropped area after resize the window\n  restore: true,\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n  // Show the black modal\n  modal: true,\n  // Show the dashed lines for guiding\n  guides: true,\n  // Show the center indicator for guiding\n  center: true,\n  // Show the white modal to highlight the crop box\n  highlight: true,\n  // Show the grid background\n  background: true,\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n  // Enable to move the image\n  movable: true,\n  // Enable to rotate the image\n  rotatable: true,\n  // Enable to scale the image\n  scalable: true,\n  // Enable to zoom the image\n  zoomable: true,\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n  // Enable to move the crop box\n  cropBoxMovable: true,\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n/**\n * Check if the given value is not a number.\n */\n\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\n\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\n\nfunction isObject(value) {\n  return _typeof(value) === 'object' && value !== null;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\n\nfunction forEach(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length)\n    /* array-like */\n    ) {\n        var length = data.length;\n        var i;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\n\nvar assign = Object.assign || function assign(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n};\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/}\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\n\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\nvar REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\n\nfunction setStyle(element, styles) {\n  var style = element.style;\n  forEach(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\n\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\n\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = \"\".concat(className, \" \").concat(value);\n  }\n}\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\n\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\n\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    forEach(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n/**\n * Transform the given string from camelCase to kebab-case\n * @param {string} value - The value to transform.\n * @returns {string} The transformed value.\n */\n\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\n\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  }\n\n  if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute(\"data-\".concat(hyphenate(name)));\n}\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\n\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute(\"data-\".concat(hyphenate(name)), data);\n  }\n}\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\n\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = undefined;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = undefined;\n    }\n  } else {\n    element.removeAttribute(\"data-\".concat(hyphenate(name)));\n  }\n}\nvar REGEXP_SPACES = /\\s\\s*/;\n\nvar onceSupported = function () {\n  var supported = false;\n\n  if (IN_BROWSER) {\n    var once = false;\n\n    var listener = function listener() {};\n\n    var options = Object.defineProperty({}, 'once', {\n      get: function get() {\n        supported = true;\n        return once;\n      },\n\n      /**\n       * This setter can fix a `TypeError` in strict mode\n       * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n       * @param {boolean} value - The value to set\n       */\n      set: function set(value) {\n        once = value;\n      }\n    });\n    WINDOW.addEventListener('test', listener, options);\n    WINDOW.removeEventListener('test', listener, options);\n  }\n\n  return supported;\n}();\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\n\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (!onceSupported) {\n      var listeners = element.listeners;\n\n      if (listeners && listeners[event] && listeners[event][listener]) {\n        handler = listeners[event][listener];\n        delete listeners[event][listener];\n\n        if (Object.keys(listeners[event]).length === 0) {\n          delete listeners[event];\n        }\n\n        if (Object.keys(listeners).length === 0) {\n          delete element.listeners;\n        }\n      }\n    }\n\n    element.removeEventListener(event, handler, options);\n  });\n}\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\n\nfunction addListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var _handler = listener;\n  type.trim().split(REGEXP_SPACES).forEach(function (event) {\n    if (options.once && !onceSupported) {\n      var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n      _handler = function handler() {\n        delete listeners[event][listener];\n        element.removeEventListener(event, _handler, options);\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        listener.apply(element, args);\n      };\n\n      if (!listeners[event]) {\n        listeners[event] = {};\n      }\n\n      if (listeners[event][listener]) {\n        element.removeEventListener(event, listeners[event][listener], options);\n      }\n\n      listeners[event][listener] = _handler;\n      element.listeners = listeners;\n    }\n\n    element.addEventListener(event, _handler, options);\n  });\n}\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\n\nfunction dispatchEvent(element, type, data) {\n  var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n  if (isFunction(Event) && isFunction(CustomEvent)) {\n    event = new CustomEvent(type, {\n      detail: data,\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(type, true, true, data);\n  }\n\n  return element.dispatchEvent(event);\n}\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\n\nfunction getOffset(element) {\n  var box = element.getBoundingClientRect();\n  return {\n    left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n    top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n  };\n}\nvar location = WINDOW.location;\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\n\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\n\nfunction addTimestamp(url) {\n  var timestamp = \"timestamp=\".concat(new Date().getTime());\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\n\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push(\"translateX(\".concat(translateX, \"px)\"));\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push(\"translateY(\".concat(translateY, \"px)\"));\n  } // Rotate should come first before scale to match orientation transform\n\n\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push(\"rotate(\".concat(rotate, \"deg)\"));\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push(\"scaleX(\".concat(scaleX, \")\"));\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push(\"scaleY(\".concat(scaleY, \")\"));\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\n\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = assign({}, pointers);\n  var ratios = [];\n  forEach(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n    forEach(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n      ratios.push(ratio);\n    });\n  });\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n  return ratios[0];\n}\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\n\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n  return endOnly ? end : assign({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\n\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n  forEach(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n  pageX /= count;\n  pageY /= count;\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n/**\n * Check if the given value is a finite number.\n */\n\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @param {string} [type='contain'] - The adjust type.\n * @returns {Object} The result sizes.\n */\n\nfunction getAdjustedSizes(_ref4) // or 'cover'\n{\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    var adjustedWidth = height * aspectRatio;\n\n    if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\n\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\n\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getAdjustedSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n  // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n  var destMaxSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var destMinSizes = getAdjustedSizes({\n    aspectRatio: imageAspectRatio,\n    width: minWidth,\n    height: minHeight\n  }, 'cover');\n  var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n  var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n  var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\nvar fromCharCode = String.fromCharCode;\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\n\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n  forEach(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n  return arrayBuffer;\n}\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\n\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var chunks = [];\n  var chunkSize = 8192;\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  while (uint8.length > 0) {\n    chunks.push(fromCharCode.apply(void 0, _toConsumableArray(uint8.subarray(0, chunkSize))));\n    uint8 = uint8.subarray(chunkSize);\n  }\n\n  return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n}\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\n\nfunction resetAndGetOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation; // Ignores range error when the image does not have correct Exif information\n\n  try {\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset + 1 < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n      }\n    }\n  } catch (e) {\n    orientation = 1;\n  }\n\n  return orientation;\n}\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\n\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n    // Rotate left 180°\n\n    case 3:\n      rotate = -180;\n      break;\n    // Flip vertical\n\n    case 4:\n      scaleY = -1;\n      break;\n    // Flip vertical and rotate right 90°\n\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n    // Rotate right 90°\n\n    case 6:\n      rotate = 90;\n      break;\n    // Flip horizontal and rotate right 90°\n\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n    // Rotate left 90°\n\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n    this.containerData = containerData;\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = assign({}, imageData);\n    this.initialCanvasData = assign({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getAdjustedSizes.width;\n      minCanvasHeight = _getAdjustedSizes.height;\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode > (cropped ? 0 : 1)) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n    this.limitCanvas(false, true);\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n    setStyle(this.canvas, assign({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n    assign(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, assign({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(assign({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true); // Initialize auto crop area\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n    this.initialCropBoxData = assign({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n      var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      } // The minWidth/Height must be less than maxWidth/Height\n\n\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n    this.limitCropBox(false, true);\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, assign({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n    dispatchEvent(this.element, EVENT_CROP, this.getData());\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.viewBoxImage = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview;\n\n    if (typeof preview === 'string') {\n      previews = this.element.ownerDocument.querySelectorAll(preview);\n    } else if (preview.querySelector) {\n      previews = [preview];\n    }\n\n    this.previews = previews;\n    forEach(previews, function (el) {\n      var img = document.createElement('img'); // Save the original size for recover\n\n      setData(el, DATA_PREVIEW, {\n        width: el.offsetWidth,\n        height: el.offsetHeight,\n        html: el.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n      el.innerHTML = '';\n      el.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.viewBoxImage, assign({\n      width: width,\n      height: height\n    }, getTransforms(assign({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n    forEach(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n      setStyle(element.getElementsByTagName('img')[0], assign({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(assign({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData;\n      var cropBoxData;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(forEach(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n    var action;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      forEach(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    } // This line is required for preventing page zooming in iOS browsers\n\n\n    e.preventDefault();\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        // The first parameter should not be undefined (#432)\n        assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n      });\n    } else {\n      assign(pointers[e.pointerId || 0] || {}, getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n    if (e.changedTouches) {\n      forEach(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n      // Resize crop box\n\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = -width;\n          left -= width;\n        }\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += (cropBoxData.height - height) / 2;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = -height;\n          top -= height;\n        }\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += (cropBoxData.width - width) / 2;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += cropBoxData.width - width;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = -height;\n          width = -width;\n          top -= height;\n          left -= width;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = -width;\n          left -= width;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = -height;\n          top -= height;\n        }\n\n        break;\n      // Move canvas\n\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n      // Zoom canvas\n\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n      // Create crop box\n\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        } // Show the crop box if is hidden\n\n\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    } // Override\n\n\n    forEach(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.cropped && !this.disabled) {\n      this.cropped = true;\n      this.limitCropBox(true, true);\n\n      if (this.options.modal) {\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n\n      removeClass(this.cropBox, CLASS_HIDDEN);\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = assign({}, this.initialImageData);\n      this.canvasData = assign({}, this.initialCanvasData);\n      this.cropBoxData = assign({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      assign(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n   * @returns {Cropper} this\n   */\n  replace: function replace(url) {\n    var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (hasSameSize) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.viewBoxImage.src = url;\n          forEach(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        this.options.data = null;\n        this.uncreate();\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready && this.disabled) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready && !this.disabled) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n  /**\n   * Destroy the cropper and remove the instance from the image\n   * @returns {Cropper} this\n   */\n  destroy: function destroy() {\n    var element = this.element;\n\n    if (!element[NAMESPACE]) {\n      return this;\n    }\n\n    element[NAMESPACE] = undefined;\n\n    if (this.isImg && this.replaced) {\n      element.src = this.originalUrl;\n    }\n\n    this.uncreate();\n    return this;\n  },\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n   * @returns {Cropper} this\n   */\n  move: function move(offsetX) {\n    var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n    var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Cropper} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n    var changed = false;\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Cropper} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        ratio: ratio,\n        oldRatio: width / naturalWidth,\n        originalEvent: _originalEvent\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        }; // Zoom from the triggering point of the event\n\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Cropper} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Cropper} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Cropper} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n    var transformed = false;\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n      var ratio = imageData.width / imageData.naturalWidth;\n      forEach(data, function (n, i) {\n        data[i] = n / ratio;\n      });\n\n      if (rounded) {\n        // In case rounding off leads to extra 1px in right or bottom border\n        // we should round the top-left corner and the dimension (#343).\n        var bottom = Math.round(data.y + data.height);\n        var right = Math.round(data.x + data.width);\n        data.x = Math.round(data.x);\n        data.y = Math.round(data.y);\n        data.width = right - data.x;\n        data.height = bottom - data.y;\n      }\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Cropper} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n    var cropBoxData = {};\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? assign({}, this.containerData) : {};\n  },\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.sized ? assign({}, this.imageData) : {};\n  },\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n    var data = {};\n\n    if (this.ready) {\n      forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Cropper} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n    var data;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Cropper} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n    var widthChanged;\n    var heightChanged;\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _this$getData = this.getData(),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n\n    var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n    if (ratio !== 1) {\n      initialX *= ratio;\n      initialY *= ratio;\n      initialWidth *= ratio;\n      initialHeight *= ratio;\n    }\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    }, 'cover');\n\n    var _getAdjustedSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || (ratio !== 1 ? source.width : initialWidth),\n      height: options.height || (ratio !== 1 ? source.height : initialHeight)\n    }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n    var sourceWidth = source.width;\n    var sourceHeight = source.height; // Source canvas parameters\n\n    var srcX = initialX;\n    var srcY = initialY;\n    var srcWidth;\n    var srcHeight; // Destination canvas parameters\n\n    var dstX;\n    var dstY;\n    var dstWidth;\n    var dstHeight;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    } // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n\n\n    context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    return canvas;\n  },\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Cropper} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Cropper} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n    if (this.ready && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n      options.dragMode = mode;\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n    this.cropped = false;\n    this.disabled = false;\n    this.pointers = {};\n    this.ready = false;\n    this.reloading = false;\n    this.replaced = false;\n    this.sized = false;\n    this.sizing = false;\n    this.init();\n  }\n\n  _createClass(Cropper, [{\n    key: \"init\",\n    value: function init() {\n      var element = this.element;\n      var tagName = element.tagName.toLowerCase();\n      var url;\n\n      if (element[NAMESPACE]) {\n        return;\n      }\n\n      element[NAMESPACE] = this;\n\n      if (tagName === 'img') {\n        this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url; // Stop when it's a blank image\n\n        if (!url) {\n          return;\n        } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: \"load\",\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n      var element = this.element,\n          options = this.options;\n\n      if (!options.rotatable && !options.scalable) {\n        options.checkOrientation = false;\n      } // Only IE10+ supports Typed Arrays\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      } // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\n\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n      var clone = this.clone.bind(this);\n      this.reloading = true;\n      this.xhr = xhr;\n      xhr.ontimeout = clone;\n      xhr.onabort = clone;\n      xhr.onerror = clone;\n\n      xhr.onprogress = function () {\n        if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n          xhr.abort();\n        }\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      xhr.onloadend = function () {\n        _this.reloading = false;\n        _this.xhr = null;\n      }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('GET', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: \"read\",\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n      var orientation = resetAndGetOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        // Generate a new Data URL with the orientation value set to 1\n        // as some iOS browsers will render image with its orientation\n        this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n      var crossOrigin;\n      var crossOriginUrl;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n      this.image = image;\n      image.onload = this.start.bind(this);\n      image.onerror = this.stop.bind(this);\n      addClass(image, CLASS_HIDE);\n      element.parentNode.insertBefore(image, element.nextSibling);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n      image.onload = null;\n      image.onerror = null;\n      this.sizing = true;\n      var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n      var done = function done(naturalWidth, naturalHeight) {\n        assign(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.sizing = false;\n        _this2.sized = true;\n\n        _this2.build();\n      }; // Modern browsers (except Safari)\n\n\n      if (image.naturalWidth && !IS_SAFARI) {\n        done(image.naturalWidth, image.naturalHeight);\n        return;\n      }\n\n      var sizingImage = document.createElement('img');\n      var body = document.body || document.documentElement;\n      this.sizingImage = sizingImage;\n\n      sizingImage.onload = function () {\n        done(sizingImage.width, sizingImage.height);\n\n        if (!IS_SAFARI) {\n          body.removeChild(sizingImage);\n        }\n      };\n\n      sizingImage.src = image.src; // iOS Safari will convert the image automatically\n      // with its orientation once append it into DOM (#279)\n\n      if (!IS_SAFARI) {\n        sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n        body.appendChild(sizingImage);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var image = this.image;\n      image.onload = null;\n      image.onerror = null;\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: \"build\",\n    value: function build() {\n      if (!this.sized || this.ready) {\n        return;\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image; // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n      template.innerHTML = TEMPLATE;\n      var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n      var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n      var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n      var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n      var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n      this.face = face;\n      canvas.appendChild(image); // Hide the original image\n\n      addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n      container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n      options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n      addClass(cropBox, CLASS_HIDDEN);\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n      }\n\n      this.render();\n      this.ready = true;\n      this.setDragMode(options.dragMode);\n\n      if (options.autoCrop) {\n        this.crop();\n      }\n\n      this.setData(options.data);\n\n      if (isFunction(options.ready)) {\n        addListener(element, EVENT_READY, options.ready, {\n          once: true\n        });\n      }\n\n      dispatchEvent(element, EVENT_READY);\n    }\n  }, {\n    key: \"unbuild\",\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      this.ready = false;\n      this.unbind();\n      this.resetPreview();\n      this.cropper.parentNode.removeChild(this.cropper);\n      removeClass(this.element, CLASS_HIDDEN);\n    }\n  }, {\n    key: \"uncreate\",\n    value: function uncreate() {\n      if (this.ready) {\n        this.unbuild();\n        this.ready = false;\n        this.cropped = false;\n      } else if (this.sizing) {\n        this.sizingImage.onload = null;\n        this.sizing = false;\n        this.sized = false;\n      } else if (this.reloading) {\n        this.xhr.onabort = null;\n        this.xhr.abort();\n      } else if (this.image) {\n        this.stop();\n      }\n    }\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: \"noConflict\",\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: \"setDefaults\",\n    value: function setDefaults(options) {\n      assign(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n\n  return Cropper;\n}();\n\nassign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nexport default Cropper;\n"],"sourceRoot":""}